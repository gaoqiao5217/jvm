public class JvmComprehension {

    public static void main(String[] args) {
        int i = 1;
        // 1
        // Локальная переменная i инициализируется значением 1 и сохраняется в новом фрейме стека
        Object o = new Object();
        // 2
        // Создается новый объект типа Object. Для объекта будет выделено место в куче.
        // В стеке сохраняется ссылка на этот созданный объект.
        Integer ii = 2;
        // 3
        // Создается новый объект типа Integer. Для объекта будет выделено место в куче.
        // Ссылка на этот объект сохраняется в локальной переменной ii в стеке
        printAll(o, i, ii);
        // 4
        // При вызове метода printAll создается новый фрейм стека для этого метода. Локальные переменные o, i и ii будут переданы как аргументы.
        System.out.println("finished");
        // 7
        // После завершения метода main, все локальные переменные и их ссылки на объекты будут удалены.
    }

    private static void printAll(Object o, int i, Integer ii) {
        Integer uselessVar = 700;
        // 5
        // Создается новый объект типа Integer со значением 700. Для объекта будет выделено место в куче.
        // Ссылка на этот объект сохраняется в локальной переменной uselessVar в стеке
        System.out.println(o.toString() + i + ii);
        // 6
        // Вызывается метод toString() у объекта o, который возвращает строку. Затем происходит конкатенация строк.
        // После завершения работы printAll, управление возвращается в метод main, и фрейм printAll удаляется из стека.
    }
}